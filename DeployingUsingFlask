from flask import Flask, request, render_template
import os
from PIL import Image
import numpy as np
from tensorflow.keras.models import load_model

app = Flask(__name__)


@app.route("/")
def index():
    return render_template("index.html")

@app.route("/Users/Tejasree/CNN.py/static/style.css")
def static_file(filename):
    return app.send_static_file(filename)

UPLOAD_FOLDER = "/Users/Tejasree/CNN.py/static"

if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

# Load your model (make sure to provide the correct model path)
model = load_model('C:/Users/Tejasree/Downloads/my_model.hdf5')

@app.route("/", methods=["GET", "POST"])
def upload_predict():
    if request.method == "POST":
        image_file = request.files["image"]
        if image_file:
            image_location = os.path.join(
                UPLOAD_FOLDER,
                image_file.filename
            )
            image_file.save(image_location)
            
            # Load and preprocess the uploaded image
            img = Image.open(image_location)
            img = img.resize((224, 224))  # Resize to match your model's input size
            img = np.array(img) / 255.0
            img = img.reshape((1, 224, 224, 3))  # Reshape to match input shape
            
            # Make predictions using your model
            prediction = model.predict(img)
            print(prediction)
            predicted_class = (prediction[0][0])  # Assuming binary classification

            if prediction[0][0] < 0.5:
                predicted_class = "Benign"
            else:
                predicted_class = "Malignant"
            
            return render_template("index.html", prediction=predicted_class)
    
    return render_template("index.html", prediction=0)

if __name__ == "__main__":
    app.run(port=12000, debug=True)
